"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Fetcher: () => Fetcher,
  default: () => src_default,
  fetch: () => _fetch,
  fetcher: () => fetcher
});
module.exports = __toCommonJS(src_exports);

// src/fetcher.ts
var Fetcher = class {
  fetch = globalThis.fetch;
  /**
   * Sets the fetch function to be used.
   * @param f - The fetch function to set.
   */
  set(f) {
    this.fetch = f;
  }
};
var fetcher = new Fetcher();
var _fetch = (...args) => fetcher.fetch(...args);
var fetcher_default = _fetch;

// src/index.ts
var src_default = fetcher_default;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Fetcher,
  fetch,
  fetcher
});
